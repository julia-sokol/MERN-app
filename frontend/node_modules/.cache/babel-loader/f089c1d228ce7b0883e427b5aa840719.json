{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MERN-Stack-Tutorial\\\\frontend\\\\src\\\\pages\\\\RecipeForm.js\",\n    _s = $RefreshSig$();\n\n//page containing the form to add a new recipe\n//facilitates the use of global state\nimport { useRecipesContext } from \"../hooks/useRecipesContext\";\nimport { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = () => {\n  _s();\n\n  const {\n    user\n  } = useAuthContext();\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [cookingTime, setCookingTime] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [instructions, setInstructions] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [error, setError] = useState(null); //the function to update the global state.\n\n  const {\n    dispatch\n  } = useRecipesContext();\n  const [emptyFields, setEmptyFields] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    //prevents the page from being refreshed after the form submissiion\n    e.preventDefault();\n    const recipe = {\n      title,\n      category,\n      cookingTime,\n      ingredients,\n      instructions,\n      imageUrl\n    };\n    const response = await fetch('/api', {\n      method: 'POST',\n      body: JSON.stringify(recipe),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setEmptyFields(json.emptyFields);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      setError(null);\n      setEmptyFields([]);\n      setTitle('');\n      setCategory('');\n      setCookingTime('');\n      setIngredients('');\n      setInstructions('');\n      setImageUrl('');\n      console.log('new recipe added:', json);\n      dispatch({\n        type: 'CREATE_RECIPE',\n        payload: json\n      }); // Extract the id from the server response\n\n      const newRecipeId = json._id;\n      console.log(newRecipeId);\n      navigate(`/${newRecipeId}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Add a New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Recipe title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setCategory(e.target.value),\n      value: category,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Breakfast\",\n        children: \"Breakfast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Main Course\",\n        children: \"Main Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Soup\",\n        children: \"Soup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Salad\",\n        children: \"Salad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Dessert\",\n        children: \"Dessert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cooking time:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setCookingTime(e.target.value),\n      value: cookingTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setIngredients(e.target.value),\n      value: ingredients,\n      className: emptyFields.includes('ingredients') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \" Instructions: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setInstructions(e.target.value),\n      value: instructions,\n      className: emptyFields.includes('instructions') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Image URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setImageUrl(e.target.value),\n      value: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeForm, \"PgL8zH4660nqmY8IR/0cCYJDaOQ=\", false, function () {\n  return [useAuthContext, useRecipesContext, useNavigate];\n});\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["useRecipesContext","useState","useNavigate","useAuthContext","RecipeForm","user","title","setTitle","category","setCategory","cookingTime","setCookingTime","ingredients","setIngredients","instructions","setInstructions","imageUrl","setImageUrl","error","setError","dispatch","emptyFields","setEmptyFields","navigate","handleSubmit","e","preventDefault","recipe","response","fetch","method","body","JSON","stringify","headers","token","json","ok","console","log","type","payload","newRecipeId","_id","target","value","includes"],"sources":["C:/Users/Admin/Desktop/MERN-Stack-Tutorial/frontend/src/pages/RecipeForm.js"],"sourcesContent":["//page containing the form to add a new recipe\r\n\r\n//facilitates the use of global state\r\nimport { useRecipesContext } from \"../hooks/useRecipesContext\"\r\n\r\nimport { useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\n\r\n\r\nconst RecipeForm = () => {\r\n  \r\n  const { user } = useAuthContext()\r\n  const [title, setTitle] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [cookingTime, setCookingTime] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [instructions, setInstructions] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [error, setError] = useState(null);\r\n  //the function to update the global state.\r\n  const { dispatch } = useRecipesContext()\r\n  const [emptyFields, setEmptyFields] = useState([])\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    //prevents the page from being refreshed after the form submissiion\r\n    e.preventDefault()\r\n\r\n    const recipe = {title, category, cookingTime, ingredients, instructions, imageUrl}\r\n    \r\n    const response = await fetch('/api', {\r\n      method: 'POST',\r\n      body: JSON.stringify(recipe),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${user.token}`\r\n      }\r\n    })\r\n\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n      setEmptyFields(json.emptyFields)\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      setError(null);\r\n      setEmptyFields([])\r\n      setTitle('')\r\n      setCategory('')\r\n      setCookingTime('')\r\n      setIngredients('')\r\n      setInstructions('')\r\n      setImageUrl('')\r\n\r\n      console.log('new recipe added:', json)\r\n      dispatch({type: 'CREATE_RECIPE', payload: json})\r\n      // Extract the id from the server response\r\n      const newRecipeId = json._id;\r\n      console.log(newRecipeId);\r\n      navigate(`/${newRecipeId}`);\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}> \r\n      <h2 className=\"heading\">Add a New Recipe</h2>\r\n\r\n      <label>Recipe title:</label>\r\n      <input \r\n        type=\"text\" \r\n        onChange={(e) => setTitle(e.target.value)} \r\n        value={title}\r\n        className={emptyFields.includes('title') ? 'error' : ''}\r\n      />\r\n\r\n      <label>Category:</label>\r\n      <select\r\n        onChange={(e) => setCategory(e.target.value)}\r\n        value={category}\r\n      >\r\n        <option value=\"Breakfast\">Breakfast</option>\r\n        <option value=\"Main Course\">Main Course</option>\r\n        <option value=\"Soup\">Soup</option>\r\n        <option value=\"Salad\">Salad</option>\r\n        <option value=\"Dessert\">Dessert</option>\r\n      </select>\r\n\r\n\r\n      <label>Cooking time:</label>\r\n      <input \r\n        type=\"text\" \r\n        onChange={(e) => setCookingTime(e.target.value)} \r\n        value={cookingTime}\r\n      />\r\n\r\n      <label>Ingredients:</label>\r\n      <textarea \r\n        onChange={(e) => setIngredients(e.target.value)} \r\n        value={ingredients}\r\n        className={emptyFields.includes('ingredients') ? 'error' : ''}\r\n      ></textarea>\r\n\r\n      <label> Instructions: </label>\r\n      <textarea\r\n        onChange={(e) => setInstructions(e.target.value)} \r\n        value={instructions}\r\n        className={emptyFields.includes('instructions') ? 'error' : ''}\r\n      ></textarea>\r\n\r\n      <label>Image URL:</label>\r\n      <input \r\n        type=\"text\" \r\n        onChange={(e) => setImageUrl(e.target.value)} \r\n        value={imageUrl}\r\n      />\r\n      {error && <div className=\"error\">{error}</div>}  \r\n       <button>Add Recipe</button>\r\n     \r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RecipeForm\r\n\r\n    \r\n\r\n\r\n"],"mappings":";;;AAAA;AAEA;AACA,SAASA,iBAAT,QAAkC,4BAAlC;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,yBAA/B;;;AAGA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAEvB,MAAM;IAAEC;EAAF,IAAWF,cAAc,EAA/B;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC,CATuB,CAUvB;;EACA,MAAM;IAAEmB;EAAF,IAAepB,iBAAiB,EAAtC;EACA,MAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAMsB,QAAQ,GAAGrB,WAAW,EAA5B;;EAEA,MAAMsB,YAAY,GAAG,MAAOC,CAAP,IAAa;IAChC;IACAA,CAAC,CAACC,cAAF;IAEA,MAAMC,MAAM,GAAG;MAACrB,KAAD;MAAQE,QAAR;MAAkBE,WAAlB;MAA+BE,WAA/B;MAA4CE,YAA5C;MAA0DE;IAA1D,CAAf;IAEA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAD,EAAS;MACnCC,MAAM,EAAE,MAD2B;MAEnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAF6B;MAGnCO,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAkB,UAAS7B,IAAI,CAAC8B,KAAM;MAF/B;IAH0B,CAAT,CAA5B;IASA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAT,EAAnB;;IAEA,IAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;MAChBf,cAAc,CAACc,IAAI,CAACf,WAAN,CAAd;MACAF,QAAQ,CAACiB,IAAI,CAAClB,KAAN,CAAR;IACD;;IACD,IAAIU,QAAQ,CAACS,EAAb,EAAiB;MACflB,QAAQ,CAAC,IAAD,CAAR;MACAG,cAAc,CAAC,EAAD,CAAd;MACAf,QAAQ,CAAC,EAAD,CAAR;MACAE,WAAW,CAAC,EAAD,CAAX;MACAE,cAAc,CAAC,EAAD,CAAd;MACAE,cAAc,CAAC,EAAD,CAAd;MACAE,eAAe,CAAC,EAAD,CAAf;MACAE,WAAW,CAAC,EAAD,CAAX;MAEAqB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,IAAjC;MACAhB,QAAQ,CAAC;QAACoB,IAAI,EAAE,eAAP;QAAwBC,OAAO,EAAEL;MAAjC,CAAD,CAAR,CAXe,CAYf;;MACA,MAAMM,WAAW,GAAGN,IAAI,CAACO,GAAzB;MACAL,OAAO,CAACC,GAAR,CAAYG,WAAZ;MACAnB,QAAQ,CAAE,IAAGmB,WAAY,EAAjB,CAAR;IACD;EACF,CAtCD;;EAwCA,oBACE;IAAM,SAAS,EAAC,QAAhB;IAAyB,QAAQ,EAAElB,YAAnC;IAAA,wBACE;MAAI,SAAS,EAAC,SAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGC,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACmB,MAAF,CAASC,KAAV,CAF3B;MAGE,KAAK,EAAEvC,KAHT;MAIE,SAAS,EAAEe,WAAW,CAACyB,QAAZ,CAAqB,OAArB,IAAgC,OAAhC,GAA0C;IAJvD;MAAA;MAAA;MAAA;IAAA,QAJF,eAWE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAXF,eAYE;MACE,QAAQ,EAAGrB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACmB,MAAF,CAASC,KAAV,CAD9B;MAEE,KAAK,EAAErC,QAFT;MAAA,wBAIE;QAAQ,KAAK,EAAC,WAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAQ,KAAK,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAQ,KAAK,EAAC,MAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAQ,KAAK,EAAC,OAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAQ,KAAK,EAAC,SAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,eAwBE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBF,eAyBE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGiB,CAAD,IAAOd,cAAc,CAACc,CAAC,CAACmB,MAAF,CAASC,KAAV,CAFjC;MAGE,KAAK,EAAEnC;IAHT;MAAA;MAAA;MAAA;IAAA,QAzBF,eA+BE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/BF,eAgCE;MACE,QAAQ,EAAGe,CAAD,IAAOZ,cAAc,CAACY,CAAC,CAACmB,MAAF,CAASC,KAAV,CADjC;MAEE,KAAK,EAAEjC,WAFT;MAGE,SAAS,EAAES,WAAW,CAACyB,QAAZ,CAAqB,aAArB,IAAsC,OAAtC,GAAgD;IAH7D;MAAA;MAAA;MAAA;IAAA,QAhCF,eAsCE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtCF,eAuCE;MACE,QAAQ,EAAGrB,CAAD,IAAOV,eAAe,CAACU,CAAC,CAACmB,MAAF,CAASC,KAAV,CADlC;MAEE,KAAK,EAAE/B,YAFT;MAGE,SAAS,EAAEO,WAAW,CAACyB,QAAZ,CAAqB,cAArB,IAAuC,OAAvC,GAAiD;IAH9D;MAAA;MAAA;MAAA;IAAA,QAvCF,eA6CE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA7CF,eA8CE;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGrB,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACmB,MAAF,CAASC,KAAV,CAF9B;MAGE,KAAK,EAAE7B;IAHT;MAAA;MAAA;MAAA;IAAA,QA9CF,EAmDGE,KAAK,iBAAI;MAAK,SAAS,EAAC,OAAf;MAAA,UAAwBA;IAAxB;MAAA;MAAA;MAAA;IAAA,QAnDZ,eAoDG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApDH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyDD,CAhHD;;GAAMd,U;UAEaD,c,EASIH,iB,EAEJE,W;;;KAbbE,U;AAkHN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}