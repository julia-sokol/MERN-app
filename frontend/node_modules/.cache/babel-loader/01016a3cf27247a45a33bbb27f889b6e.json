{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MERN-Stack-Tutorial\\\\frontend\\\\src\\\\pages\\\\Recipe.js\",\n    _s2 = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useRecipesContext } from '../hooks/useRecipesContext';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recipe = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    dispatch\n  } = useRecipesContext();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  const useFetch = url => {\n    _s();\n\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(url);\n\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n\n          const result = await response.json();\n          setData(result);\n          setError(null);\n        } catch (error) {\n          setError('Error fetching data');\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchData();\n    }, [url]);\n    return {\n      data,\n      error,\n      loading\n    };\n  };\n\n  _s(useFetch, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\n\n  const apiUrl = `http://localhost:3000/api/${id}`;\n  const {\n    data: recipe,\n    error,\n    loading\n  } = useFetch(apiUrl);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleEdit = async () => {\n    navigate(`/edit/${recipe._id}`);\n  };\n\n  const handleDelete = async () => {\n    const response = await fetch(`/api/${recipe._id}`, {\n      method: 'DELETE'\n    });\n    const json = await response.json();\n\n    if (response.ok) {\n      dispatch({\n        type: 'DELETE_RECIPE',\n        payload: json\n      });\n      navigate(`/`);\n    }\n  }; //stores the paragraphs of provided by a user recipe directions and ingredients in arrays so\n  //that they could be presented on the page as separate paragraphs\n\n\n  const directionsArray = recipe.instructions.split('\\n');\n  const ingredientsArray = recipe.ingredients.split('\\n');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: recipe.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), recipe.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: recipe.imageUrl,\n      alt: \"Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: recipe.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), ingredientsArray.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: paragraph\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Directions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), directionsArray.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"directions\",\n          children: paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"material-symbols-outlined delete\",\n      onClick: handleDelete,\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"material-symbols-outlined edit\",\n      onClick: handleEdit,\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Recipe, \"5i1spV2NypE4tUc8SaAU9LCKJ7Y=\", true, function () {\n  return [useRecipesContext, useParams, useNavigate];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"names":["useParams","useState","useEffect","useRecipesContext","useNavigate","Recipe","dispatch","id","navigate","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","response","fetch","ok","Error","result","json","apiUrl","recipe","handleEdit","_id","handleDelete","method","type","payload","directionsArray","instructions","split","ingredientsArray","ingredients","title","imageUrl","category","map","paragraph","index"],"sources":["C:/Users/Admin/Desktop/MERN-Stack-Tutorial/frontend/src/pages/Recipe.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { useRecipesContext } from '../hooks/useRecipesContext'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Recipe = () => {\r\n\r\n  const { dispatch } = useRecipesContext()\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch(url);\r\n\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          const result = await response.json();\r\n          setData(result);\r\n          setError(null);\r\n        } catch (error) {\r\n          setError('Error fetching data');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchData();\r\n    }, [url]);\r\n\r\n    return { data, error, loading };\r\n  };\r\n\r\n  const apiUrl = `http://localhost:3000/api/${id}`;\r\n\r\n  const { data: recipe, error, loading } = useFetch(apiUrl);\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n\r\n  const handleEdit = async () => {\r\n\r\n    navigate(`/edit/${recipe._id}`);\r\n\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    \r\n    const response = await fetch(`/api/${recipe._id}`, {\r\n    method: 'DELETE'\r\n    })\r\n\r\n    const json = await response.json()\r\n\r\n    if (response.ok) {\r\n    dispatch({type: 'DELETE_RECIPE', payload: json})\r\n    navigate(`/`);\r\n    }\r\n  }\r\n \r\n  //stores the paragraphs of provided by a user recipe directions and ingredients in arrays so\r\n  //that they could be presented on the page as separate paragraphs\r\n  const directionsArray = recipe.instructions.split('\\n');\r\n  const ingredientsArray = recipe.ingredients.split('\\n');\r\n\r\n  return (\r\n\r\n    <div className=\"workout-details\">\r\n      <h4>{recipe.title}</h4>\r\n      {recipe.imageUrl && <img src={recipe.imageUrl} alt=\"Recipe\" />}\r\n      <p>\r\n        {recipe.category}\r\n      </p>\r\n      <div className=\"recipe\">\r\n        <h3>Ingredients:</h3>\r\n        {ingredientsArray.map((paragraph, index) => (\r\n          <p key={index}>{paragraph}</p>\r\n        ))}\r\n      \r\n      </div>\r\n      <div className=\"recipe\">\r\n        <div>\r\n        <h3>Directions:</h3>\r\n        {directionsArray.map((paragraph, index) => (\r\n          <p className='directions' key={index}>{paragraph}</p>\r\n        ))}\r\n        </div>\r\n      </div>\r\n      <span className=\"material-symbols-outlined delete\" onClick={handleDelete}>delete</span>\r\n      <span className=\"material-symbols-outlined edit\" onClick={handleEdit}\r\n      >edit</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}