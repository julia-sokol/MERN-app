{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\MERN-Stack-Tutorial\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(); //the function takes as a parameter the current state and the action type defined \n//in the dispatch function, i.e., dispatch({type: 'LOGIN', payload: json})\n\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        user: action.payload\n      };\n\n    case 'LOGOUT':\n      return {\n        user: null\n      };\n\n    default:\n      return state;\n  }\n};\n/*'state' saves the current authentication state of a user\r\n'dispatch' is the functionn to update the state\r\nauthReducer function defines how the state is updated*/\n\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null\n  }); //the function updates the authentication state with data saved in local storage so that \n  //the user should not login every time they refresh the page\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      dispatch({\n        type: 'LOGIN',\n        payload: user\n      });\n    }\n  }, []);\n  console.log('AuthContext state:', state);\n  /*the AuthContextProvider is exported to the index.js file and wraps App/ element, i.e., all the routes defined in App.js;\r\n   { children } object is whatever is wrapped by AuthContextProvider. \r\n   Therefore, the defined 'value' is accesible from any route defined in App.js*/\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: { ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"aje+cfjBS04NEowhMWI+G1pFfoA=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","AuthContext","authReducer","state","action","type","user","payload","AuthContextProvider","children","dispatch","JSON","parse","localStorage","getItem","console","log"],"sources":["C:/Users/Admin/Desktop/MERN-Stack-Tutorial/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect } from 'react'\r\n\r\nexport const AuthContext = createContext()\r\n\r\n//the function takes as a parameter the current state and the action type defined \r\n//in the dispatch function, i.e., dispatch({type: 'LOGIN', payload: json})\r\nexport const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return { user: action.payload }\r\n    case 'LOGOUT':\r\n      return { user: null }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n/*'state' saves the current authentication state of a user\r\n'dispatch' is the functionn to update the state\r\nauthReducer function defines how the state is updated*/\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, { \r\n    user: null\r\n  })\r\n  \r\n  //the function updates the authentication state with data saved in local storage so that \r\n  //the user should not login every time they refresh the page\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    if (user) {\r\n      dispatch({ type: 'LOGIN', payload: user }) \r\n    }\r\n  }, [])\r\n\r\n  console.log('AuthContext state:', state)\r\n \r\n  /*the AuthContextProvider is exported to the index.js file and wraps App/ element, i.e., all the routes defined in App.js;\r\n   { children } object is whatever is wrapped by AuthContextProvider. \r\n   Therefore, the defined 'value' is accesible from any route defined in App.js*/\r\n  return (\r\n    <AuthContext.Provider value={{ ...state, dispatch }}>\r\n      { children }\r\n    </AuthContext.Provider>\r\n  )\r\n\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC,C,CAEP;AACA;;AACA,OAAO,MAAMI,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC5C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,OAAL;MACE,OAAO;QAAEC,IAAI,EAAEF,MAAM,CAACG;MAAf,CAAP;;IACF,KAAK,QAAL;MACE,OAAO;QAAED,IAAI,EAAE;MAAR,CAAP;;IACF;MACE,OAAOH,KAAP;EANJ;AAQD,CATM;AAWP;AACA;AACA;;AACA,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACnD,MAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBX,UAAU,CAACG,WAAD,EAAc;IAChDI,IAAI,EAAE;EAD0C,CAAd,CAApC,CADmD,CAKnD;EACA;;EACAN,SAAS,CAAC,MAAM;IACd,MAAMM,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;IAEA,IAAIR,IAAJ,EAAU;MACRI,QAAQ,CAAC;QAAEL,IAAI,EAAE,OAAR;QAAiBE,OAAO,EAAED;MAA1B,CAAD,CAAR;IACD;EACF,CANQ,EAMN,EANM,CAAT;EAQAS,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCb,KAAlC;EAEA;AACF;AACA;;EACE,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE,EAAE,GAAGA,KAAL;MAAYO;IAAZ,CAA7B;IAAA,UACID;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA1BM;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}