{"ast":null,"code":"var _s = $RefreshSig$();\n\n//This hook is exported to the Signup page file and the logic is fired whenever the signup form is submited.\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json)); // update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      }); // update loading state\n\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/Admin/Desktop/MERN-Stack-Tutorial/frontend/src/hooks/useSignup.js"],"sourcesContent":["//This hook is exported to the Signup page file and the logic is fired whenever the signup form is submited.\r\nimport { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(null)\r\n  const { dispatch } = useAuthContext()\r\n\r\n  const signup = async (email, password) => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    const response = await fetch('/api/user/signup', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ email, password })\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false)\r\n      setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage\r\n      localStorage.setItem('user', JSON.stringify(json))\r\n\r\n      // update the auth context\r\n      dispatch({type: 'LOGIN', payload: json})\r\n\r\n      // update loading state\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return { signup, isLoading, error }\r\n}"],"mappings":";;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM;IAAEO;EAAF,IAAeN,cAAc,EAAnC;;EAEA,MAAMO,MAAM,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;IACxCJ,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,CAAC,IAAD,CAAR;IAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;MAC/CC,MAAM,EAAE,MADuC;MAE/CC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFsC;MAG/CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAAER,KAAF;QAASC;MAAT,CAAf;IAHyC,CAArB,CAA5B;IAKA,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAI,CAACP,QAAQ,CAACQ,EAAd,EAAkB;MAChBb,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR;IACD;;IACD,IAAIQ,QAAQ,CAACQ,EAAb,EAAiB;MACf;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA7B,EAFe,CAIf;;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAP;QAAgBC,OAAO,EAAEL;MAAzB,CAAD,CAAR,CALe,CAOf;;MACAZ,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAzBD;;EA2BA,OAAO;IAAEE,MAAF;IAAUH,SAAV;IAAqBF;EAArB,CAAP;AACD,CAjCM;;GAAMD,S;UAGUD,c"},"metadata":{},"sourceType":"module"}